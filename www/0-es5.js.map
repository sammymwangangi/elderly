{"version":3,"sources":["webpack:///node_modules/@alan-ai/alan-button/dist/esm/alan-button.entry.js"],"names":["isCordova","window","cordova","Device","readyStatusPromise","Promise","resolve","interval","setInterval","exec","clearInterval","device","AlanButton","hostRef","alanHolderId","command","onCommand","event","buttonState","connectionStatus","visualState","alanBtnInst","setVisualState","funcName","data","callback","apply","arguments","callProjectApi","text","playText","playCommand","reject","activate","deactivate","res","isActive","remove","alanHost","ready","then","successCbData","type","emit","alanKey","left","right","bottom","zIndex","alanBtn","key","host","getHost","size","rootEl","element","shadowRoot","getElementById","shadowDOM","onEvent","onButtonState","onConnectionStatus","status","id"],"mappings":"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","file":"0-es5.js","sourcesContent":["import { r as registerInstance, c as createEvent, h, g as getElement } from './index-18e88af1.js';\n\nfunction isCordova() {\n    return window && window.cordova;\n}\n\nclass Device {\n    constructor() {\n        this.readyStatusPromise = new Promise((resolve) => {\n            if (isCordova()) {\n                this.interval = setInterval(() => {\n                    if (window.cordova && typeof window.cordova.exec === 'function') {\n                        clearInterval(this.interval);\n                        resolve();\n                    }\n                }, 300);\n            }\n            else {\n                resolve();\n            }\n        });\n    }\n    ready() {\n        return this.readyStatusPromise;\n    }\n}\nconst device = new Device();\n\nclass AlanButton {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.alanHolderId = 'alan-holder';\n        this.command = createEvent(this, \"command\", 7);\n        this.onCommand = createEvent(this, \"onCommand\", 7);\n        this.event = createEvent(this, \"event\", 7);\n        this.buttonState = createEvent(this, \"buttonState\", 7);\n        this.connectionStatus = createEvent(this, \"connectionStatus\", 7);\n    }\n    /** Method for setting the visual state.\n     * @param {object} visualState - Visual state data object.\n     * */\n    async setVisualState(visualState) {\n        if (isCordova()) {\n            cordova.exec(() => {\n            }, () => {\n            }, \"alanVoice\", \"setVisualState\", [visualState]);\n        }\n        else {\n            this.alanBtnInst.setVisualState(visualState);\n        }\n    }\n    /** Method for calling a project API that was defined in Alan Studio projectâ€™s script.\n     * @param {string} funcName - API method name.\n     * @param {object} data - Data that should be passed to the project API method.\n     * @param {Function} callback - Callback that could be returned from the project API method.\n     *\n     * */\n    async callProjectApi(funcName, data, callback) {\n        if (isCordova()) {\n            cordova.exec(() => {\n                callback.apply(this, ...arguments);\n            }, () => {\n            }, \"alanVoice\", \"callProjectApi\", [funcName, data]);\n        }\n        else {\n            this.alanBtnInst.callProjectApi(funcName, data, callback);\n        }\n    }\n    /** Method for playing text using text-to-speech.\n     * @param {string} text - Text that should be played.\n     * */\n    async playText(text) {\n        if (isCordova()) {\n            cordova.exec(() => {\n            }, () => {\n            }, \"alanVoice\", \"playText\", [text]);\n        }\n        else {\n            this.alanBtnInst.playText(text);\n        }\n    }\n    /** Method for sending command(synchronised with voice).\n     * @param {object} command - Command data.\n     * */\n    async playCommand(command) {\n        if (isCordova()) {\n            cordova.exec(() => {\n            }, () => {\n            }, \"alanVoice\", \"playCommand\", \n            // [{data: command}]);\n            [command]);\n        }\n        else {\n            this.alanBtnInst.playCommand(command);\n        }\n    }\n    /** Method for activating the Alan button.\n     * */\n    async activate() {\n        if (isCordova()) {\n            return new Promise(function (resolve, reject) {\n                cordova.exec(() => {\n                    resolve();\n                }, () => {\n                    reject();\n                }, \"alanVoice\", \"activate\", []);\n            });\n        }\n        else {\n            return this.alanBtnInst.activate();\n        }\n    }\n    /** Method for deactivating the Alan button.\n     * */\n    async deactivate() {\n        if (isCordova()) {\n            cordova.exec(() => {\n            }, () => {\n            }, \"alanVoice\", \"deactivate\", []);\n        }\n        else {\n            this.alanBtnInst.deactivate();\n        }\n    }\n    /** Method for getting active status of the Alan button.\n     * */\n    async isActive() {\n        if (isCordova()) {\n            return new Promise(function (resolve, reject) {\n                cordova.exec((res) => {\n                    resolve(res);\n                }, () => {\n                    reject();\n                }, \"alanVoice\", \"isActive\", []);\n            });\n        }\n        else {\n            return this.alanBtnInst.isActive();\n        }\n    }\n    /** Method for removing the Alan button.\n     * */\n    async removeButton() {\n        if (isCordova()) {\n            cordova.exec(() => {\n            }, () => {\n            }, \"alanVoice\", \"removeButton\", []);\n        }\n        else {\n            this.alanBtnInst.remove();\n            this.alanBtnInst = null;\n        }\n    }\n    getHost() {\n        return this.alanHost || 'studio.alan.app';\n    }\n    componentDidLoad() {\n        if (isCordova()) {\n            device.ready().then(() => {\n                cordova.exec((successCbData) => {\n                    // command and onCommand are reversed to be consistent with html style adding events\n                    if (successCbData.type === 'command') {\n                        this.onCommand.emit(successCbData.data);\n                    }\n                    if (successCbData.type === 'onCommand') {\n                        this.command.emit(successCbData.data);\n                    }\n                    if (successCbData.type === 'onButtonState') {\n                        this.buttonState.emit(successCbData.data);\n                    }\n                    if (successCbData.type === 'onEvent') {\n                        this.event.emit(successCbData.data);\n                    }\n                    if (successCbData.type === 'connectionState') {\n                        this.connectionStatus.emit(successCbData.data);\n                    }\n                }, () => {\n                }, \"alanVoice\", \"addButton\", [this.alanKey, this.left, this.right, this.bottom, this.zIndex]);\n            });\n        }\n        else {\n            this.alanBtnInst = alanBtn({\n                key: this.alanKey,\n                host: this.getHost(),\n                size: this.size,\n                left: this.left,\n                right: this.right,\n                bottom: this.bottom,\n                zIndex: this.zIndex,\n                rootEl: this.element.shadowRoot.getElementById(this.alanHolderId),\n                shadowDOM: this.element.shadowRoot,\n                onCommand: (data) => {\n                    this.command.emit(data);\n                },\n                onEvent: (data) => {\n                    this.event.emit(data);\n                },\n                onButtonState: (data) => {\n                    this.buttonState.emit(data);\n                },\n                onConnectionStatus: (data) => {\n                    let status = data === 'authorized' ? 'connected' : 'disconnected';\n                    this.connectionStatus.emit(status);\n                },\n            });\n        }\n    }\n    render() {\n        return h(\"div\", null, h(\"div\", { id: this.alanHolderId }));\n    }\n    get element() { return getElement(this); }\n}\n\nexport { AlanButton as alan_button };\n"]}